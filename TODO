
Composants pour Trac:

- Coeur
- Notes
- Absences
- Entreprises
- Utilisateurs
- XML
- Interface
- JurysEtParcours


A VERIFIER AVANT 5.0:


 - inscrire a un autre semestre:
     . choisir modules (options, sport)
     . donner les dates des semestres !


BUGS
----

 - formsemestre_inscription_with_modules
     si inscription 'un etud deja inscrit, IntegrityError

 - verifier: les acronymes d'UE doivent etre uniques dans une formation


FEATURES REQUESTS
-----------------

* Bulletins:
  . logos IUT et Univ sur bull PDF
  . nom departement: nom abbrégé (CJ) ou complet (Carrière Juridiques)
  . bulletin: deplacer la barre indicateur (cf OLDGEA S2: gêne)
  . bulletin: click nom titre -> ficheEtud

  . formsemestre_pagebulletin_dialog: marges en mm: accepter "2,5" et "2.5" 
    et valider correctement le form !

* Jury
  . recapcomplet: revenir avec qq lignes au dessus de l'étudiant en cours


* Divers
  . formsemestre_editwithmodules: confirmer suppression modules
      (et pour l'instant impossible si evaluations dans le module)

* Modules et UE optionnelles:
  . UE capitalisées: donc dispense possible dans semestre redoublé.
      traitable en n'inscrivant pas l'etudiant au modules
      de cette UE: faire interface utilisateur

  . page pour inscription d'un etudiant a un module
  . page pour visualiser les modules auquel un etudiant est inscrit,
    et le desinscrire si besoin.

  . ficheEtud  indiquer si inscrit au module sport

* Absences
  . EtatAbsences : verifier dates (en JS)
  . Listes absences pdf et listes groupes pdf + emargements (cf mail Nathalie)
  . absences par demi-journées sur EtatAbsencesDate (? à vérifier)
  . formChoixSemestreGroupe: utilisé par Absences/index_html
       a améliorer

* Photos
  . Version "haute résolution" des photos

* Notes et évaluations: 
  . Exception "Not an OLE file": generer page erreur plus explicite
  . Dates evaluation: utiliser JS pour calendrier
  . Saisie des notes: si une note invalide, l'indiquer dans le listing (JS ?)
  . et/ou: notes invalides: afficher les noms des etudiants concernes 
    dans le message d'erreur.
  . upload excel: message erreur peu explicite:
          * Feuille "Saisie notes", 17 lignes
          * Erreur: la feuille contient 1 notes invalides
          * Notes invalides pour les id: ['10500494']
          (pas de notes modifiées)
          Notes chargées. <<< CONTRADICTOIRE !!

  . recap complet semestre:
       Options:
           - choix groupes
           - critère de tri (moy ou alphab)
           - nb de chiffres a afficher

       + definir des "catégories" d'évaluations (eg "théorie","pratique")
         afin de n'afficher que des moyennes "de catégorie" dans
         le bulletin.

  . liste des absents à une eval et croisement avec BD absences

  . notes_evaluation_listenotes
    - afficher groupes, moyenne, #inscrits, #absents, #manquantes dans l'en-tete.
    - lien vers modif notes (selon role)

  . Export excel des notes d'evaluation: indiquer date, et autres infos en haut.
  . Génération PDF listes notes
  . Page recap notes moyennes par groupes (choisir type de groupe?)

  . (GEA) edition tableau notes avec tous les evals d'un module
        (comme notes_evaluation_listenotes mais avec tt les evals)


* Non prioritaire:
 . optimiser scolar_news_summary
 . recapitulatif des "nouvelles"
     - dernieres notes
     - changement de statuts (demissions,inscriptions)
     - annotations
     - entreprises

 . notes_table: pouvoir changer decision sans invalider tout le cache
 . navigation: utiliser Session pour montrer historique pages vues ?


* TrivialFormulator:
 - clarifier le typage (strings/ints/...)
   tout devrait rester en type string, ce qui n'empeche pas un checking

 - class CSS sur tous les éléments, avec préfix paramétrable;

 - Vers une seule description pour TableEditor et formulaires edit/create ?

 - html_quote ?

 - "widget" saisie menu + champ texte (comme fait au lipn)

 - Creer un produit permettant d'utiliser la classe TF depuis Zope  ?

 - terminer refactoring (classe TF)

------------------------------------------------------------------------



   
Refonte page formsemestre_status:

menus:


+ Menu "Semestre"
Modifier ce semestre [ScoImplementFormation]
Options du semestre [ScoImplementFormation, responsable]


+ Menu "Bulletins"
Tableau de toutes les moyennes (et liens bulletins)
Classeur PDF des bulletins
Voir les décisions du jury (et éditer les PV)
Générer feuille préparation Jury
Saisie des décisions du jury          [can_validate_sem]


+ Menu "Inscriptions"
Voir les inscriptions aux modules
Modifier les groupes de TD, langues, TP [ScoEtudChangeGroups]
Inscriptions (passage des étudiants) depuis d'autres semestres [ScoInscrireEtud]
Synchroniser avec étape Apogée (expérimental) [ScoInscrireEtud]
Importer de nouveaux étudiants dans ce semestre (table Excel) [ScoInscrireEtud]
Créer un nouvel étudiant [ScoInscrireEtud]
Table complète  (liste des etudiants excel)


+ Menu "Statistiques"
Tableau de répartition des bacs
Suivi de cohortes (à implémenter)


+ Liens (customizable)

------------------  JUIN 2008 -----------------
* Propriétés (préférences): remplacer les propriétés de Zope
-> faciliter l'installation
-> indépendance vis a vis de Zope
-> ne pas avoir a utiliser la ZMI pour install et config

table SQL scodoc_properties (id, nom, type, value, documentation)
editeur generique

* mises à jour:
script: stop zope, svn update, postinst (eg modif db), start zope
postinst: script python executé a chaque mise à jour 

* gestion connexion BD:
fichier config: connection string associée à l'URL ScoDoc (ScoURL())
install: création db connection ? ou bien gérer nous même !
UsersDB: a part, géré uniquement en Zope pour le moment ?

* Installeur: 
  - image Zope minimale
    (voir si on peut mettre les icones comme des fichiers ordinaires)

  - ajout d'un département == ajout instance ZScolar
     Un seul parametre: nom du departement (un mot "Dept" == "RT", "Info", etc)

       . fichier config: config/Dept.cfg
          CONNECTION_STRING='xxx'
          
A faire:

 0) INSTALL de base:
- prerequis: apache2, utilisateur www-data
- detarer ScoDoc.tgz  (== Zope + produits + scodoc)
- changer mot de passe admin Zope


 1) Script (à lancer comme root): create_dept.sh
    création de la base de données pour un dept: db SCO+DeptName.upper()
    (connection sans mot de passe, utilisateur postgres www-data)
    initialisation des preferences (DeptName est requis)
    creation fichier config:
        config/depts/DeptName.py 

 2) ZScolar.__init__: parametre = nom du departement
   - creation des rôles et des permissions
      -> definition de trois roles locaux EnsDept, SecrDept, AdminDept
      -> réglage des permissions

 3) page d'accueil listant les departements
   Si admin: lien : ajouter un département
      param: DeptName
   Le script create_dept.sh doit avoir été lancé avant.


Admin: compte admin zope (access): set_passwd.sh
   Verifier qu'il a bien access aux parametres (preferences)

createuser --no-createdb --no-adduser viennet
createdb -E LATIN1 -O viennet SCOVIENNET

Base utilisateurs:

Hierarchie Zope:
ZScoDoc (in)
   icons/ (créé par build_icons_folder)
   UsersDB   (cnx db utilisateurs)
   acl_users (Zope users folder)
   Dept1/  (Zope folder)
	Fotos/ (Zope folder)
        Scolarite (ScoDoc instance)
            DB (cnx db notes)
            Notes
            Absences
            Entreprises
            Users
   Dept2/
        ...

TODO
  - script update
=> test install vierge
=> Annonce
 
 - archivage des semestres
 - utilisateurs: source externe
